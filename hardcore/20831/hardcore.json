from bs import *
try: from .advanced import Settings
except: pass
try: from .zeroGame import ZeroGameFactory
except: pass
try: from .bombs import BombFactory as HardCoreBombFactory
except: pass
try: from .bombs import getFactory as getHardCoreBombsFactory
except: pass
try: from .powerups import PowerupFactory as HardCorePowerupFactory
except: pass
try: from .powerups import getFactory as getHardCorePowerupsFactory
except: pass
try: from .utils import get_tint, get_normal_tint, get_motion, set_motion, set_tint, get_account_string
except: pass
from os.path import sep, exists
from json import load as load_json

env = getEnvironment(); path = None
SYSTEM_SCRIPTS_PATH = env['systemScriptsDirectory']
USER_SCRIPTS_PATH = env['userScriptsDirectory']  
del env

def get_data_path():
    path = None
    for p in [SYSTEM_SCRIPTS_PATH, USER_SCRIPTS_PATH]:
        p += sep + 'hardcoreModpack.data'
        if exists(p): path = p; break
    return path

DATA_PATH = get_data_path()

def get_data():
    if DATA_PATH is None or not exists(DATA_PATH): return None
    try: data = load_json(open(DATA_PATH))
    except: data = {}
    finally: return data

def get_version(numeric=True):
    data = get_data()
    return int(data.get("version", 0)) if numeric else data.get("version_str", "0")

def get_path():
    data = get_data()
    return data.get("path", None)
    
version = get_version(True)
