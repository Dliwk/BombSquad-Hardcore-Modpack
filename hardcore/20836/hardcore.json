from os.path import sep, exists
from json import load as load_json
from bs import getEnvironment

env = getEnvironment()
path = None
SYSTEM_SCRIPTS_PATH = env['systemScriptsDirectory']
USER_SCRIPTS_PATH = env['userScriptsDirectory']
DATA_PATH = None
del env

def get_data_path():
    path = None
    for p in [SYSTEM_SCRIPTS_PATH, USER_SCRIPTS_PATH]:
        p += sep + 'hardcoreModpack.data'
        if exists(p): path = p; break
    return path

def get_data():
    global DATA_PATH
    if DATA_PATH is None: DATA_PATH = get_data_path()
    if DATA_PATH is None or not exists(DATA_PATH): return None
    try: data = load_json(open(DATA_PATH))
    except: data = {}
    finally: return data

def get_version(numeric=True):
    data = get_data()
    return int(data.get("version", 0)) if numeric else data.get("version_str", "0")

def get_path():
    data = get_data()
    return data.get("path", None)